<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>study.microcoffeeoncloud</groupId>
    <artifactId>microcoffeeoncloud-certificates</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <exec-maven-plugin.version>3.1.0</exec-maven-plugin.version>
        <keytool-maven-plugin.version>1.7</keytool-maven-plugin.version>
        <maven-clean-plugin.version>3.3.1</maven-clean-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-install-plugin.version>3.1.1</maven-install-plugin.version>
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>

        <!-- VM host IP -->
        <vmHostIp>192.168.99.100</vmHostIp>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>keytool-maven-plugin</artifactId>
                    <version>${keytool-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <!--
            Profile that generates certificates with openssl. We must use openssl instead of keytool since openssl
            allow SAN with wildcard hostnames which is something we need.

            Note: openssl must be installed on the developer machine. (Version: OpenSSL 1.1.0g  2 Nov 2017)
        -->
        <profile>
            <id>gen-certs</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- Filter openssl configuration files used to generate the certificates -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${maven-resources-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>filter-resources</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/openssl</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/openssl</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>

                            <!-- Also include pem files in certificate jar artifact -->
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.outputDirectory}/certs</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/openssl</directory>
                                            <includes>
                                                <include>*.pem</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-output-directory</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>initialize</phase>
                                <configuration>
                                    <executable>mkdir</executable>
                                    <arguments>
                                        <argument>${project.build.outputDirectory}</argument>
                                    </arguments>
                                </configuration>
                            </execution>

                            <!-- List openssl version -->
                            <execution>
                                <id>list-openssl-version</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>
                                        <argument>version</argument>
                                    </arguments>
                                </configuration>
                            </execution>

                            <!-- Generate private keys and certificates -->
                            <execution>
                                <id>generate-key-and-cert-microcoffee-study</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>
                                        <argument>req</argument>
                                        <argument>-x509</argument>
                                        <argument>-sha256</argument>
                                        <argument>-nodes</argument>
                                        <argument>-days</argument>
                                        <argument>3650</argument>
                                        <argument>-newkey</argument>
                                        <argument>rsa:2048</argument>
                                        <argument>-keyout</argument>
                                        <argument>${project.build.directory}/openssl/microcoffee.study-key.pem</argument>
                                        <argument>-out</argument>
                                        <argument>${project.build.directory}/openssl/microcoffee.study-cert.pem</argument>
                                        <argument>-config</argument>
                                        <argument>${project.build.directory}/openssl/microcoffee.study.cfg</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-key-and-cert-localhost</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>
                                        <argument>req</argument>
                                        <argument>-x509</argument>
                                        <argument>-sha256</argument>
                                        <argument>-nodes</argument>
                                        <argument>-days</argument>
                                        <argument>3650</argument>
                                        <argument>-newkey</argument>
                                        <argument>rsa:2048</argument>
                                        <argument>-keyout</argument>
                                        <argument>${project.build.directory}/openssl/localhost-key.pem</argument>
                                        <argument>-out</argument>
                                        <argument>${project.build.directory}/openssl/localhost-cert.pem</argument>
                                        <argument>-config</argument>
                                        <argument>${project.build.directory}/openssl/localhost.cfg</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-key-and-cert-wildcard-default</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>
                                        <argument>req</argument>
                                        <argument>-x509</argument>
                                        <argument>-sha256</argument>
                                        <argument>-nodes</argument>
                                        <argument>-days</argument>
                                        <argument>3650</argument>
                                        <argument>-newkey</argument>
                                        <argument>rsa:2048</argument>
                                        <argument>-keyout</argument>
                                        <argument>${project.build.directory}/openssl/wildcard.default-key.pem</argument>
                                        <argument>-out</argument>
                                        <argument>${project.build.directory}/openssl/wildcard.default-cert.pem</argument>
                                        <argument>-config</argument>
                                        <argument>${project.build.directory}/openssl/wildcard.default.cfg</argument>
                                    </arguments>
                                </configuration>
                            </execution>

                            <!-- Create PKCS12 keystores containing the created key and cert -->
                            <execution>
                                <id>create-pcks12-keystore-microcoffee-study</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>
                                        <argument>pkcs12</argument>
                                        <argument>-export</argument>
                                        <argument>-inkey</argument>
                                        <argument>${project.build.directory}/openssl/microcoffee.study-key.pem</argument>
                                        <argument>-in</argument>
                                        <argument>${project.build.directory}/openssl/microcoffee.study-cert.pem</argument>
                                        <argument>-out</argument>
                                        <argument>${project.build.outputDirectory}/microcoffee.study.p12</argument>
                                        <argument>-password</argument>
                                        <argument>pass:12345678</argument>
                                        <argument>-name</argument>
                                        <argument>microcoffee.study</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-pcks12-keystore-localhost</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>
                                        <argument>pkcs12</argument>
                                        <argument>-export</argument>
                                        <argument>-inkey</argument>
                                        <argument>${project.build.directory}/openssl/localhost-key.pem</argument>
                                        <argument>-in</argument>
                                        <argument>${project.build.directory}/openssl/localhost-cert.pem</argument>
                                        <argument>-out</argument>
                                        <argument>${project.build.outputDirectory}/localhost.p12</argument>
                                        <argument>-password</argument>
                                        <argument>pass:12345678</argument>
                                        <argument>-name</argument>
                                        <argument>localhost</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-pcks12-keystore-wildcard-default</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>
                                        <argument>pkcs12</argument>
                                        <argument>-export</argument>
                                        <argument>-inkey</argument>
                                        <argument>${project.build.directory}/openssl/wildcard.default-key.pem</argument>
                                        <argument>-in</argument>
                                        <argument>${project.build.directory}/openssl/wildcard.default-cert.pem</argument>
                                        <argument>-out</argument>
                                        <argument>${project.build.outputDirectory}/wildcard.default.p12</argument>
                                        <argument>-password</argument>
                                        <argument>pass:12345678</argument>
                                        <argument>-name</argument>
                                        <argument>wildcard.default</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <executable>openssl</executable>
                            <workingDirectory>${project.build.directory}/openssl</workingDirectory>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>keytool-maven-plugin</artifactId>
                        <executions>
                            <!-- Import PKCS12 keystore to JKS keystore -->
                            <execution>
                                <id>import-to-jks-microcoffee-study</id>
                                <goals>
                                    <goal>importKeystore</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <srckeystore>${project.build.outputDirectory}/microcoffee.study.p12</srckeystore>
                                    <srcstorepass>12345678</srcstorepass>
                                    <srcstoretype>PKCS12</srcstoretype>
                                    <destkeystore>${project.build.outputDirectory}/microcoffee-keystore.jks</destkeystore>
                                    <deststorepass>12345678</deststorepass>
                                    <deststoretype>JKS</deststoretype>
                                </configuration>
                            </execution>
                            <execution>
                                <id>import-to-jks-localhost</id>
                                <goals>
                                    <goal>importKeystore</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <srckeystore>${project.build.outputDirectory}/localhost.p12</srckeystore>
                                    <srcstorepass>12345678</srcstorepass>
                                    <srcstoretype>PKCS12</srcstoretype>
                                    <destkeystore>${project.build.outputDirectory}/microcoffee-keystore.jks</destkeystore>
                                    <deststorepass>12345678</deststorepass>
                                    <deststoretype>JKS</deststoretype>
                                </configuration>
                            </execution>
                            <execution>
                                <id>import-to-jks-wildcard-default</id>
                                <goals>
                                    <goal>importKeystore</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <srckeystore>${project.build.outputDirectory}/wildcard.default.p12</srckeystore>
                                    <srcstorepass>12345678</srcstorepass>
                                    <srcstoretype>PKCS12</srcstoretype>
                                    <destkeystore>${project.build.outputDirectory}/microcoffee-keystore.jks</destkeystore>
                                    <deststorepass>12345678</deststorepass>
                                    <deststoretype>JKS</deststoretype>
                                </configuration>
                            </execution>

                            <!-- Import certificates to a PKCS12 truststore (required by Tomcat) -->
                            <execution>
                                <id>import-cert-to-pkcs12-truststore-microcoffee-study</id>
                                <goals>
                                    <goal>importCertificate</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <file>${project.build.directory}/openssl/microcoffee.study-cert.pem</file>
                                    <alias>microcoffee.study</alias>
                                    <noprompt>true</noprompt>
                                    <keystore>${project.build.outputDirectory}/microcoffee-truststore.jks</keystore>
                                    <storepass>12345678</storepass>
                                    <storetype>PKCS12</storetype>
                                </configuration>
                            </execution>
                            <execution>
                                <id>import-cert-to-pkcs12-truststore-localhost</id>
                                <goals>
                                    <goal>importCertificate</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <file>${project.build.directory}/openssl/localhost-cert.pem</file>
                                    <alias>localhost</alias>
                                    <noprompt>true</noprompt>
                                    <keystore>${project.build.outputDirectory}/microcoffee-truststore.jks</keystore>
                                    <storepass>12345678</storepass>
                                    <storetype>PKCS12</storetype>
                                </configuration>
                            </execution>
                            <execution>
                                <id>import-cert-to-pkcs12-truststore-wildcard-default</id>
                                <goals>
                                    <goal>importCertificate</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <file>${project.build.directory}/openssl/wildcard.default-cert.pem</file>
                                    <alias>wildcard.default</alias>
                                    <noprompt>true</noprompt>
                                    <keystore>${project.build.outputDirectory}/microcoffee-truststore.jks</keystore>
                                    <storepass>12345678</storepass>
                                    <storetype>PKCS12</storetype>
                                </configuration>
                            </execution>

                            <!-- List contents of keystore and truststore -->
                            <execution>
                                <id>list-keystore</id>
                                <goals>
                                    <goal>list</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <keystore>${project.build.outputDirectory}/microcoffee-keystore.jks</keystore>
                                    <storepass>12345678</storepass>
                                    <verbose>true</verbose>
                                </configuration>
                            </execution>
                            <execution>
                                <id>list-truststore</id>
                                <goals>
                                    <goal>list</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <keystore>${project.build.outputDirectory}/microcoffee-truststore.jks</keystore>
                                    <storepass>12345678</storepass>
                                    <verbose>true</verbose>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
            Profile that generates certificates with keytool, however keytool doesn't allow SAN with wildcard hostnames which
            is something we need.
        -->
        <profile>
            <id>gen-certs-keytool</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>keytool-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>clean-keystore</id>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <phase>initialize</phase>
                            </execution>

                            <!-- Generate keystores -->
                            <execution>
                                <id>generate-key-pair-microcoffee-study</id>
                                <goals>
                                    <goal>generateKeyPair</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <alias>microcoffee.study</alias>
                                    <dname>cn=*.microcoffee.study, ou=Unknown, o=Unknown, l=Unknown, st=Unknown, c=Unknown</dname>
                                    <!-- <ext>SAN=ip:${vmHostIp},dns:*.microcoffee.study</ext> -->
                                    <storetype>JKS</storetype>
                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-key-pair-localhost</id>
                                <goals>
                                    <goal>generateKeyPair</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <alias>localhost</alias>
                                    <dname>cn=localhost, ou=Unknown, o=Unknown, l=Unknown, st=Unknown, c=Unknown</dname>
                                    <storetype>JKS</storetype>
                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-key-pair-ip</id>
                                <goals>
                                    <goal>generateKeyPair</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <alias>${vmHostIp}</alias>
                                    <dname>cn=${vmHostIp}, ou=Unknown, o=Unknown, l=Unknown, st=Unknown, c=Unknown</dname>
                                    <storetype>JKS</storetype>
                                </configuration>
                            </execution>

                            <!-- Convert keystore to PKCS12 format (selected alias) -->
                            <execution>
                                <id>convert-pkcs12-localhost</id>
                                <goals>
                                    <goal>importKeystore</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <srcalias>localhost</srcalias>
                                    <destkeystore>${project.build.outputDirectory}/localhost.p12</destkeystore>
                                    <deststorepass>12345678</deststorepass>
                                    <deststoretype>PKCS12</deststoretype>
                                    <noprompt>false</noprompt>
                                </configuration>
                            </execution>
                            <execution>
                                <id>convert-pkcs12-ip</id>
                                <goals>
                                    <goal>importKeystore</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <srcalias>${vmHostIp}</srcalias>
                                    <destkeystore>${project.build.outputDirectory}/${vmHostIp}.p12</destkeystore>
                                    <deststorepass>12345678</deststorepass>
                                    <deststoretype>PKCS12</deststoretype>
                                    <noprompt>false</noprompt>
                                </configuration>
                            </execution>
                            <execution>
                                <id>convert-pkcs12-microcoffee-study</id>
                                <goals>
                                    <goal>importKeystore</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <srcalias>microcoffee.study</srcalias>
                                    <destkeystore>${project.build.outputDirectory}/microcoffee.study.p12</destkeystore>
                                    <deststorepass>12345678</deststorepass>
                                    <deststoretype>PKCS12</deststoretype>
                                    <noprompt>false</noprompt>
                                </configuration>
                            </execution>

                            <!-- List contents of keystore -->
                            <execution>
                                <id>list-keystore</id>
                                <goals>
                                    <goal>list</goal>
                                </goals>
                                <phase>process-resources</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <keystore>${project.build.outputDirectory}/microcoffee-keystore.jks</keystore>
                            <srckeystore>${project.build.outputDirectory}/microcoffee-keystore.jks</srckeystore>
                            <storepass>12345678</storepass>
                            <srcstorepass>12345678</srcstorepass>
                            <keypass>12345678</keypass>
                            <validity>3650</validity>
                            <keyalg>RSA</keyalg>
                            <verbose>true</verbose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>

