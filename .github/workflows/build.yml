name: Build Microcoffee and push to DockerHub
on:
  push:
    branches: [ master ]
    paths-ignore:
      - "**/README.md"
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:  # Allows you to run this workflow manually from the Actions tab

jobs:
  build-all:
    name: Build all projects with Maven and Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of Sonar analysis

      - name: Setup Java 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache Maven artifacts
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Generate certificate
        run: mvn -f microcoffeeoncloud-certificates/pom.xml clean install -Pgen-certs -B

      - name: Run unit and integration tests
        run: mvn clean verify -Pitest -B

      - name: Analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn --projects .,microcoffeeoncloud-configserver sonar:sonar -B
          mvn --projects .,microcoffeeoncloud-creditrating sonar:sonar -B
          mvn --projects .,microcoffeeoncloud-discovery sonar:sonar -B
          mvn --projects .,microcoffeeoncloud-gateway sonar:sonar -B
          mvn --projects .,microcoffeeoncloud-jwttest sonar:sonar -B
          mvn --projects .,microcoffeeoncloud-location sonar:sonar -B
          mvn --projects .,microcoffeeoncloud-order sonar:sonar -B
          # testing all projects
          mvn sonar:sonar -B

      - name: Build and push Docker images to DockerHub
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login https://index.docker.io/v1/ --username ${{ secrets.DOCKERHUB_USER }} --password-stdin
          mvn clean package -DskipTests -Pbuild,push -B
